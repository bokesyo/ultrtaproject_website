<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: MongoDB | UltraProject]]></title>
  <link href="https://ningding97.github.io/ultrtaproject_website//blog/categories/mongodb/atom.xml" rel="self"/>
  <link href="https://ningding97.github.io/ultrtaproject_website//"/>
  <updated>2023-12-14T03:26:26+00:00</updated>
  <id>https://ningding97.github.io/ultrtaproject_website//</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Are you using the right Mongo geospatial query?]]></title>
    <link href="https://ningding97.github.io/ultrtaproject_website//blog/2023/02/10/mongo-geospatial-queries/"/>
    <updated>2023-02-10T00:00:00+00:00</updated>
    <id>https://ningding97.github.io/ultrtaproject_website//blog/2023/02/10/mongo-geospatial-queries</id>
    <content type="html"><![CDATA[<p>We recently got a report from one of our galleries in the Los Angeles area that
they weren’t showing up on our
<a href="https://www.artsy.net/shows/los-angeles-ca-usa">Los Angeles exhibition listings</a>.</p>

<p>I fielded the report and right away confirmed: when we asked our core API for
<code class="language-plaintext highlighter-rouge">/shows?near=&lt;los angeles coordinates&gt;</code>, sure enough this gallery partner didn’t
make the cut.</p>

<p><em>Case closed</em>. Or so I thought.</p>

<!-- more -->

<p>After some back and forth with our partner I decided to investigate more
thoroughly, this time using some tricks of the trade from
<a href="https://www.anandarooproy.com">my other life</a> outside of Artsy.</p>

<h2 id="casting-a-wider-net">Casting a wider net</h2>

<p>If there was something wrong with our 25km radius query, I wanted to start by
casting a wider net and visualizing the results.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// a $geoWithin $center query</span>

<span class="nx">db</span><span class="p">.</span><span class="nx">events</span><span class="p">.</span><span class="nx">find</span><span class="p">({</span>
  <span class="na">coordinates</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">$geoWithin</span><span class="p">:</span> <span class="p">{</span>
      <span class="na">$center</span><span class="p">:</span> <span class="p">[[</span><span class="o">-</span><span class="mf">118.24</span><span class="p">,</span> <span class="mf">34.05</span><span class="p">],</span> <span class="mi">25</span> <span class="o">/</span> <span class="mf">111.32</span><span class="p">],</span>
    <span class="p">},</span>
  <span class="p">},</span>
<span class="p">})</span>
</code></pre></div></div>

<p>I modified the above query to cast a 50km net in order to see if there were some
edges cases that needed scrutiny. Taking the resulting JSON response, I fired up
<a href="https://www.placemark.io/">Placemark</a>, my favorite new tool for wrangling
geospatial data.</p>

<p>(Incidentally I recommend reading Tom Macwright’s
<a href="https://macwright.com/2023/01/28/placemark.html">recent reflection on creating Placemark</a>
as a bootstrapped indie developer.)</p>

<figure class="illustration">
  <img src="/images/2023-02-10-mongo-geospatial-queries/1.png" alt="Screenshot of a visualization in Placemark showing Los Angeles area exhibitions within a 50km radius." />
  <figcaption>All shows within a 50km radius</figcaption>
</figure>

<h2 id="more-than-one-way-to-draw-a-circle-on-the-earth">More than one way to draw a circle on the Earth</h2>

<p>It was at this point that I recalled the specific form of the geospatial query
our code was performing, and consulted the
<a href="https://www.mongodb.com/docs/manual/reference/operator/query/geoWithin/">MongoDB docs for the $geoWithin query</a>.</p>

<p>Turns out that you can invoke this as a radius query in one of two ways, by
specifying
<a href="https://www.mongodb.com/docs/manual/reference/operator/query/center/">$center</a>
or
<a href="https://www.mongodb.com/docs/manual/reference/operator/query/centerSphere/">$centerSphere</a>.</p>

<p>Per the
<a href="https://www.mongodb.com/docs/manual/reference/operator/query/center/#behavior">docs</a>
for <code class="language-plaintext highlighter-rouge">$center</code>, this query…</p>

<blockquote>
  <p>calculates distances using flat (planar) geometry</p>
</blockquote>

<p>Let us pause for a moment to note that while only some maps are
<a href="https://press.uchicago.edu/ucp/books/book/chicago/H/bo27400568.html">deceitful</a>,
<em>all</em> maps are untruths. In the sense that they flatten three dimensions down to
two, and inevitably distort the world in the process.</p>

<h2 id="a-postscript-on-map-distortion">A postscript on map distortion</h2>
<p>This corresponds to what you get when you use MongoDB’s <code class="language-plaintext highlighter-rouge">$geoWithin</code> <code class="language-plaintext highlighter-rouge">$center</code>
query on geospatial data:</p>

<figure class="illustration">
  <img src="/images/2023-02-10-mongo-geospatial-queries/7.png" alt="Tissot's indicatrix for equirectangular projection" />
  <figcaption>Tissot's indicatrix for equirectangular projection. Credit: Justin Kunimune, <a href="https://creativecommons.org/licenses/by-sa/4.0">CC BY-SA 4.0</a>, via Wikimedia Commons</figcaption>
</figure>

<p>But we hope that understanding this crucial distinction between planar
(<code class="language-plaintext highlighter-rouge">$center</code>) and spherical (<code class="language-plaintext highlighter-rouge">$centerSphere</code>) calculations will help you make the
right choice when devising your own radius queries with MongoDB or other
geospatial engines.</p>
]]></content>
  </entry>
  
</feed>
